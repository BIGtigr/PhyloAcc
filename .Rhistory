the_sum = sum(exp(temp[-1] - temp[1:n]))*sqrt(2)
abline(v= the_sum, col=2)
dev.off()
mean_beta = c()
for(b in seq(3, 5, by=0.1))
{
the_sum = lgamma(1:(n+1)/2*b)
the_sum = sum(exp(the_sum[-1] - the_sum[1:n]))*sqrt(2)
mean_beta  = c(mean_beta , the_sum)
}
plot(seq(3, 5, by=0.1), mean_beta, type="l")
mean_beta = c()
for(b in seq(0.1, 5, by=0.1))
{
the_sum = lgamma(1:(n+1)/2*b)
the_sum = sum(exp(the_sum[-1] - the_sum[1:n]))*sqrt(2)
mean_beta  = c(mean_beta , the_sum)
}
plot(seq(0.1, 5, by=0.1), mean_beta, type="l")
plot(seq(0.1, 5, by=0.1), log(mean_beta), type="l")
pdf("Phd_4/RandomMatrix/ps7_mean_beta.pdf")
mean_beta = c()
for(b in seq(0.1, 5, by=0.1))
{
the_sum = lgamma(1:(n+1)/2*b)
the_sum = sum(exp(the_sum[-1] - the_sum[1:n]))*sqrt(2)
mean_beta  = c(mean_beta , the_sum)
}
plot(seq(0.1, 5, by=0.1), log(mean_beta), type="l", xlab="beta")
dev.off()
n = 100
beta = 1
trial = 500
lambda1 <- rep(0, trial)
lambda2 <- rep(0, trial)
for(i  in 1:trial)
{
B = diag(sqrt(rchisq(n, n:1 * beta )))
diag(B[-1,])  <- sqrt(rchisq(n-1, (n-1):1 * beta))
lambda = eigen(B)$values
lambda1[i] = sum(lambda)
lambda2[i] = sum(lambda^2)
}
# the_variance
temp = lgamma(1:(n+1)/2)
the_var = n * (n+1)/2 - 2 * sum(exp(2*(temp[-1] - temp[1:n])))
var(lambda1)
hist(lambda1, xlab="sum of singular values", main=paste0("n = ", n, "\nsvar = ", round(var(lambda1),2),"\nvar = ", round(the_var,2)))
the_sum = sum(exp(temp[-1] - temp[1:n]))*sqrt(2)
abline(v= the_sum, col=2)
pdf("Phd_4/RandomMatrix/ps1/ps7_100.pdf")
hist(lambda1, xlab="sum of singular values", main=paste0("n = ", n, "\nsvar = ", round(var(lambda1),2),"\nvar = ", round(the_var,2)))
the_sum = sum(exp(temp[-1] - temp[1:n]))*sqrt(2)
abline(v= the_sum, col=2)
dev.off()
n = 100
beta = 1
trial = 1000
lambda1 <- rep(0, trial)
lambda2 <- rep(0, trial)
for(i  in 1:trial)
{
B = diag(sqrt(rchisq(n, n:1 * beta )))
diag(B[-1,])  <- sqrt(rchisq(n-1, (n-1):1 * beta))
lambda = eigen(B)$values
lambda1[i] = sum(lambda)
lambda2[i] = sum(lambda^2)
}
# the_variance
temp = lgamma(1:(n+1)/2)
the_var = n * (n+1)/2 - 2 * sum(exp(2*(temp[-1] - temp[1:n])))
var(lambda1)
hist(lambda1, xlab="sum of singular values", main=paste0("n = ", n, "\nsvar = ", round(var(lambda1),2),"\nvar = ", round(the_var,2)))
the_sum = sum(exp(temp[-1] - temp[1:n]))*sqrt(2)
abline(v= the_sum, col=2)
n = 100
beta = 1
trial = 1000
lambda1 <- rep(0, trial)
lambda2 <- rep(0, trial)
for(i  in 1:trial)
{
B = diag(sqrt(rchisq(n, n:1 * beta )))
diag(B[-1,])  <- sqrt(rchisq(n-1, (n-1):1 * beta))
lambda = eigen(B)$values
lambda1[i] = sum(lambda)
lambda2[i] = sum(lambda^2)
}
# the_variance
temp = lgamma(1:(n+1)/2)
the_var = n * (n+1)/2 - 2 * sum(exp(2*(temp[-1] - temp[1:n])))
var(lambda1)
hist(lambda1, xlab="sum of singular values", main=paste0("n = ", n, "\nsvar = ", round(var(lambda1),2),"\nvar = ", round(the_var,2)))
the_sum = sum(exp(temp[-1] - temp[1:n]))*sqrt(2)
abline(v= the_sum, col=2)
install.packages("phylotools")
library(phylotools)
install.packages("phytools")
library(phytools)
?evol.rate.mcmc
?make.simmap
?phyl.pairedttest
?phylANOVA
tree<-pbtree(n=100)
Q<-matrix(c(-2,1,1,
1,-2,1,
1,1,-2),3,3)
rownames(Q)<-colnames(Q)<-letters[1:3]
x<-as.factor(sim.history(tree,Q)$states)
y1<-fastBM(tree)
y2<-fastBM(tree,sig2=0.5)+as.numeric(x)
length(x)
tree
y1
length(y1)
x = c(x, x[-1])
y = c(y, y[-1])
y = c(y1, y1[-1])
phylANOVA(tree,x,y)
phylANOVA
library(coda)
chain1 = read.table("/Users/hzr/Phd_2/Bird/mCE967994/result/mCE967994_0704_mcmc_trace_1_4502.txt", header=T, check.names = F)
chain2 = read.table("/Users/hzr/Phd_2/Bird/mCE967994/result/mCE967994_0704_prior_mcmc_trace_1_4502.txt", header=T, check.names = F)
chain3 = read.table("/Users/hzr/Phd_2/Bird/mCE967994/result/mCE967994_c08_n1_mcmc_trace_1_4502.txt", header=T, check.names = F)
chain4 = read.table("/Users/hzr/Phd_2/Bird/mCE967994/result/mCE967994_c08_n2_mcmc_trace_1_4502.txt", header=T, check.names = F)
setwd("~/PhD_2/Bird/")
### boxplot of BF1 & 2 & LRTfor postive elements, conserved and negative elements ###
prefix0 = "simulation_diff_rates2-0710/npc/simu_500_200_" #2-2, cprior/simu_500_200_pc_
logP0 = "simulation_diff_rates2/simu_500_200_diffr_"  #subtree3/
logLRT0 = read.table(paste0(logP0,"1-1.txt") ,header = F) #
loglik_ratio0 <- read.table(paste(prefix0,"npc_1-1_elem_lik.txt",sep=""),header = T)#
ratio0 <- loglik_ratio0$log_ratio
ratio01 <- loglik_ratio0[,5] - loglik_ratio0[,4]
## Elements selected with 5% FDR, plot BF vs. FDR
trueRate <- read.delim("simulation_diff_rates2/simu_500_200_diffr_1-1.bed", header=F)
element_pos <- data.frame("BF1"=ratio0, "BF2"=ratio01, "LRT"=logLRT0$V8, "scen" = rep(0, length(ratio0)), "rate" = trueRate[,6:7])
for(k in 1:8)
{
prefix1 = paste0(prefix0, "npc_2-",k)
#prefix10 = paste0(prefix00, "2-",k)
logP1 = paste0(logP0,"2-",k,".txt")
logLRT1 = read.table(logP1,header = F)
loglik_ratio1 <- read.table(paste(prefix1,"_elem_lik.txt",sep=""),header = T)
#loglik_ratio10 <-  read.table(paste(prefix10,"_elem_lik.txt",sep=""),header = T)
#ind = which(is.na(loglik_ratio1$log_ratio))
#loglik_ratio1[ind, ] <- loglik_ratio10[ind,]
trueRate <- read.delim(paste0("simulation_diff_rates2/simu_500_200_diffr_2-",k,".bed"), header=F)
ratio1 <- loglik_ratio1[,4] - loglik_ratio1[,3]
ratio11 <- loglik_ratio1[,5] - loglik_ratio1[,4]
#ratio1[ratio11 >5] <- -10
ind = sample(500,100)
element_pos <- rbind(element_pos, cbind("BF1"=ratio1[ind], "BF2"=ratio11[ind], "LRT"=logLRT1$V8[ind], "scen" =rep(k, 100),"rate" = trueRate[ind,6:7]))
}
element_pos$label <- rep(0, nrow(element_pos))
element_pos$label[element_pos$scen==0 | element_pos$scen>=7 ] = 1
element_pos <- na.omit(element_pos)
element_pos <- element_pos[order(-element_pos$BF1),]
fdr <- matrix(0, nrow(element_pos), 5)
fdr[, 1] = cumsum(element_pos$label)/seq(1:nrow(element_pos))
i = 2
for(bf2 in c(0, 2, 5))
{
fdr[, i] = cumsum(element_pos$label & element_pos$BF2 < -bf2)/ cumsum(element_pos$BF2 < -bf2)#seq(1:nrow(element_pos)) #
i = i + 1
}
element_pos <- element_pos[order(-element_pos$LRT),]
fdr[,i] = cumsum(element_pos$label)/seq(1:nrow(element_pos))
par(mar=c(4, 4, 2, 5), lwd =2,mgp = c(1.6, .5, 0),cex.lab = 1.5,cex.axis=1.2,bg=NA)
element_pos <- element_pos[order(-element_pos$LRT),]
plot(fdr[,5], element_pos$LRT,  axes=FALSE, type="l",lwd=2, xlab="",ylab="", col= 5)
axis(4, col=5,col.axis=5,las=1)
mtext("LRT",side=4,col=5,line=2.2,cex=1.2)
par(new=T)
element_pos <- element_pos[order(-element_pos$BF1),]
matplot(fdr[,1:4], element_pos$BF1, type="l", ylab="logBF1", xlab="FPR",ylim=c(-5,120), lwd=2) #
legend("topright",legend=c(paste("logBF2 >", c(-Inf, 0,2, 5)),"LR"), lty=1:4, col=1:5,lwd=2,cex=1.2)
abline(v=0.05, col="gray", lty=2)
element_pos <- element_pos[order(-element_pos$LRT),]
pdf("simulation_diff_rates2-0710/FDR_vBF1-npc.pdf") #FDR_vBF1-npc3 (LRT from subtree3)
par(mar=c(4, 4, 2, 5), lwd =2,mgp = c(1.6, .5, 0),cex.lab = 1.5,cex.axis=1.2,bg=NA)
element_pos <- element_pos[order(-element_pos$LRT),]
plot(fdr[,5], element_pos$LRT,  axes=FALSE, type="l",lwd=2, xlab="",ylab="", col= 5)
axis(4, col=5,col.axis=5,las=1)
mtext("LR",side=4,col=5,line=2.2,cex=1.2)
par(new=T)
element_pos <- element_pos[order(-element_pos$BF1),]
matplot(fdr[,1:4], element_pos$BF1, type="l", ylab="logBF1", xlab="FPR",ylim=c(-5,120), lwd=2) #
legend("topright",legend=c(paste("logBF2 >", c(-Inf, 0,2, 5)),"LR"), lty=1:4, col=1:5,lwd=2,cex=1.2)
abline(v=0.05, col="gray", lty=2)
dev.off()
trueRate <- read.delim("simulation_diff_rates2/simu_500_200_diffr_1-1.bed", header=F)
element_pos <- data.frame("BF1"=ratio0, "BF2"=ratio01, "LRT"=logLRT0$V8, "scen" = rep(0, length(ratio0)), "rate" = trueRate[,6:7])
##element_pos = element_pos[element_pos$BF2 > -16 , ]  # remove 3 elements with rn < 0.6, 180722 ???
for(k in 1:8)
{
prefix1 = paste0(prefix0, "npc_2-",k)
#prefix10 = paste0(prefix00, "2-",k)
logP1 = paste0(logP0,"2-",k,".txt")
logLRT1 = read.table(logP1,header = F)
loglik_ratio1 <- read.table(paste(prefix1,"_elem_lik.txt",sep=""),header = T)
#loglik_ratio10 <-  read.table(paste(prefix10,"_elem_lik.txt",sep=""),header = T)
#ind = which(is.na(loglik_ratio1$log_ratio))
#loglik_ratio1[ind, ] <- loglik_ratio10[ind,]
trueRate <- read.delim(paste0("simulation_diff_rates2/simu_500_200_diffr_2-",k,".bed"), header=F)
ratio1 <- loglik_ratio1[,4] - loglik_ratio1[,3]
ratio11 <- loglik_ratio1[,5] - loglik_ratio1[,4]
#ratio1[ratio11 >5] <- -10
ind = sample(500,100)
element_pos <- rbind(element_pos, cbind("BF1"=ratio1[ind], "BF2"=ratio11[ind], "LRT"=logLRT1$V8[ind], "scen" =rep(k, 100),"rate" = trueRate[ind,6:7]))
}
element_pos$label <- rep(0, nrow(element_pos))
element_pos$label[element_pos$scen==0 | element_pos$scen>=7 ] = 1
element_pos <- na.omit(element_pos)
element_pos <- element_pos[order(-element_pos$BF1),]
fdr <- matrix(0, nrow(element_pos), 5)
fdr[, 1] = cumsum(element_pos$label)/seq(1:nrow(element_pos))
i = 2
for(bf2 in c(0, 2, 5))
{
fdr[, i] = cumsum(element_pos$label & element_pos$BF2 < -bf2)/ cumsum(element_pos$BF2 < -bf2)#seq(1:nrow(element_pos)) #
i = i + 1
}
element_pos <- element_pos[order(-element_pos$LRT),]
fdr[,i] = cumsum(element_pos$label)/seq(1:nrow(element_pos))
par(mar=c(4, 4, 2, 5), lwd =2,mgp = c(1.6, .5, 0),cex.lab = 1.5,cex.axis=1.2,bg=NA)
element_pos <- element_pos[order(-element_pos$LRT),]
plot(fdr[,5], element_pos$LRT,  axes=FALSE, type="l",lwd=2, xlab="",ylab="", col= 5)
axis(4, col=5,col.axis=5,las=1)
mtext("LR",side=4,col=5,line=2.2,cex=1.2)
par(new=T)
element_pos <- element_pos[order(-element_pos$BF1),]
matplot(fdr[,1:4], element_pos$BF1, type="l", ylab="logBF1", xlab="FPR",ylim=c(-5,120), lwd=2) #
legend("topright",legend=c(paste("logBF2 >", c(-Inf, 0,2, 5)),"LR"), lty=1:4, col=1:5,lwd=2,cex=1.2)
abline(v=0.05, col="gray", lty=2)
prefix0 = "simulation_diff_rates2-0710/npc/simu_500_200_" #2-2, cprior/simu_500_200_pc_
logP0 = "simulation_diff_rates2/simu_500_200_diffr_"  #subtree3/
logLRT0 = read.table(paste0(logP0,"1-1.txt") ,header = F) #
loglik_ratio0 <- read.table(paste(prefix0,"npc_1-1_elem_lik.txt",sep=""),header = T)#
ratio0 <- loglik_ratio0$log_ratio
ratio01 <- loglik_ratio0[,5] - loglik_ratio0[,4]
elements<- data.frame("BF1"=ratio0, "BF2" = -ratio01,  "LRT"=logLRT0$V8, "scen" = rep(0, length(ratio0)))#, "rate" = trueRate[,6:7])
##
for(k in 1:8)
{
prefix1 = paste0(prefix0, "npc_2-",k)
logP1 = paste0(logP0,"2-",k,".txt")
logLRT1 = read.table(logP1,header = F)
loglik_ratio1 <- read.table(paste(prefix1,"_elem_lik.txt",sep=""),header = T)
#trueRate <- read.delim(paste0("simulation_diff_rates2/simu_500_200_diffr_2-",k,".bed"), header=F)
ratio1 <- loglik_ratio1[,4] - loglik_ratio1[,3]
ratio11 <- loglik_ratio1[,5] - loglik_ratio1[,4]
##ratio1[ratio11 >5] <- -10
##ind = sample(500,100)
elements <- rbind(elements, cbind("BF1"=ratio1, "BF2" = -ratio11, "LRT"=logLRT1$V8, "scen" =rep(k, 500)))#,"rate" = trueRate[,6:7]))
}
elements$pattern = "conserved"
elements$pattern[elements$scen >= 1 & elements$scen <= 6] = "positive"
elements$pattern[elements$scen >= 7] = "negative"
dim(elements)
plots <- list()
dat <- melt(elements[,c(1:3,5)])
colnames(dat)[2] <- "score"
dat$score <- factor(dat$score,levels = c('LR','logBF1',"logBF2"),ordered = TRUE)
plots[[1]] <- ggplot(dat, aes(x= pattern, y = value)) + geom_boxplot(aes(color =score), size=1.5) +xlab("") + ylim(c(-150,200)) + ylab("score")+theme_bw(base_size=16) + theme(axis.text=element_text(size=18), axis.title=element_text(size=18),legend.text=element_text(size=16), legend.title=element_text(size=18))
library(gridExtra)
library(reshape2)
plots <- list()
dat <- melt(elements[,c(1:3,5)])
colnames(dat)[2] <- "score"
dat$score <- factor(dat$score,levels = c('LR','logBF1',"logBF2"),ordered = TRUE)
plots[[1]] <- ggplot(dat, aes(x= pattern, y = value)) + geom_boxplot(aes(color =score), size=1.5) +xlab("") + ylim(c(-150,200)) + ylab("score")+theme_bw(base_size=16) + theme(axis.text=element_text(size=18), axis.title=element_text(size=18),legend.text=element_text(size=16), legend.title=element_text(size=18))
library(ggplot2)
plots <- list()
dat <- melt(elements[,c(1:3,5)])
colnames(dat)[2] <- "score"
dat$score <- factor(dat$score,levels = c('LR','logBF1',"logBF2"),ordered = TRUE)
plots[[1]] <- ggplot(dat, aes(x= pattern, y = value)) + geom_boxplot(aes(color =score), size=1.5) +xlab("") + ylim(c(-150,200)) + ylab("score")+theme_bw(base_size=16) + theme(axis.text=element_text(size=18), axis.title=element_text(size=18),legend.text=element_text(size=16), legend.title=element_text(size=18))
plot(plots[[1]])
dat <- melt(elements[,c(1:3,5)])
colnames(dat)[2] <- "score"
dat$score <- factor(dat$score,levels = c('LR','logBF1',"logBF2"),ordered = TRUE)
head(dat)
prefix0 = "simulation_diff_rates2-0710/npc/simu_500_200_" #2-2, cprior/simu_500_200_pc_
logP0 = "simulation_diff_rates2/simu_500_200_diffr_"  #subtree3/
logLRT0 = read.table(paste0(logP0,"1-1.txt") ,header = F) #
loglik_ratio0 <- read.table(paste(prefix0,"npc_1-1_elem_lik.txt",sep=""),header = T)#
ratio0 <- loglik_ratio0$log_ratio
ratio01 <- loglik_ratio0[,5] - loglik_ratio0[,4]
elements<- data.frame("logBF1"=ratio0, "logBF2" = -ratio01,  "LR"=logLRT0$V8, "scen" = rep(0, length(ratio0)))#, "rate" = trueRate[,6:7])
for(k in 1:8)
{
prefix1 = paste0(prefix0, "npc_2-",k)
logP1 = paste0(logP0,"2-",k,".txt")
logLRT1 = read.table(logP1,header = F)
loglik_ratio1 <- read.table(paste(prefix1,"_elem_lik.txt",sep=""),header = T)
#trueRate <- read.delim(paste0("simulation_diff_rates2/simu_500_200_diffr_2-",k,".bed"), header=F)
ratio1 <- loglik_ratio1[,4] - loglik_ratio1[,3]
ratio11 <- loglik_ratio1[,5] - loglik_ratio1[,4]
##ratio1[ratio11 >5] <- -10
##ind = sample(500,100)
elements <- rbind(elements, cbind("BF1"=ratio1, "BF2" = -ratio11, "LRT"=logLRT1$V8, "scen" =rep(k, 500)))#,"rate" = trueRate[,6:7]))
}
elements$pattern = "conserved"
elements$pattern[elements$scen >= 1 & elements$scen <= 6] = "positive"
elements$pattern[elements$scen >= 7] = "negative"
plots <- list()
dat <- melt(elements[,c(1:3,5)])
colnames(dat)[2] <- "score"
dat$score <- factor(dat$score,levels = c('LR','logBF1',"logBF2"),ordered = TRUE)
plots[[1]] <- ggplot(dat, aes(x= pattern, y = value)) + geom_boxplot(aes(color =score), size=1.5) +xlab("") + ylim(c(-150,200)) + ylab("score")+theme_bw(base_size=16) + theme(axis.text=element_text(size=18), axis.title=element_text(size=18),legend.text=element_text(size=16), legend.title=element_text(size=18))
plot(plots[[1]])
head(dat)
### boxplot of BF1 & 2 & LRTfor postive elements, conserved and negative elements ###
prefix0 = "simulation_diff_rates2-0710/npc/simu_500_200_" #2-2, cprior/simu_500_200_pc_
logP0 = "simulation_diff_rates2/simu_500_200_diffr_"  #subtree3/
logLRT0 = read.table(paste0(logP0,"1-1.txt") ,header = F) #
loglik_ratio0 <- read.table(paste(prefix0,"npc_1-1_elem_lik.txt",sep=""),header = T)#
ratio0 <- loglik_ratio0$log_ratio
ratio01 <- loglik_ratio0[,5] - loglik_ratio0[,4]
elements<- data.frame("logBF1"=ratio0, "logBF2" = -ratio01,  "LR"=logLRT0$V8, "scen" = rep(0, length(ratio0)))#, "rate" = trueRate[,6:7])
##
for(k in 1:8)
{
prefix1 = paste0(prefix0, "npc_2-",k)
logP1 = paste0(logP0,"2-",k,".txt")
logLRT1 = read.table(logP1,header = F)
loglik_ratio1 <- read.table(paste(prefix1,"_elem_lik.txt",sep=""),header = T)
#trueRate <- read.delim(paste0("simulation_diff_rates2/simu_500_200_diffr_2-",k,".bed"), header=F)
ratio1 <- loglik_ratio1[,4] - loglik_ratio1[,3]
ratio11 <- loglik_ratio1[,5] - loglik_ratio1[,4]
##ratio1[ratio11 >5] <- -10
##ind = sample(500,100)
elements <- rbind(elements, cbind("BF1"=ratio1, "BF2" = -ratio11, "LRT"=logLRT1$V8, "scen" =rep(k, 500)))#,"rate" = trueRate[,6:7]))
}
prefix0 = "simulation_diff_rates2-0710/npc/simu_500_200_" #2-2, cprior/simu_500_200_pc_
logP0 = "simulation_diff_rates2/simu_500_200_diffr_"  #subtree3/
logLRT0 = read.table(paste0(logP0,"1-1.txt") ,header = F) #
loglik_ratio0 <- read.table(paste(prefix0,"npc_1-1_elem_lik.txt",sep=""),header = T)#
ratio0 <- loglik_ratio0$log_ratio
ratio01 <- loglik_ratio0[,5] - loglik_ratio0[,4]
elements<- data.frame("logBF1"=ratio0, "logBF2" = -ratio01,  "LR"=logLRT0$V8, "scen" = rep(0, length(ratio0)))#, "rate" = trueRate[,6:7])
##
for(k in 1:8)
{
prefix1 = paste0(prefix0, "npc_2-",k)
logP1 = paste0(logP0,"2-",k,".txt")
logLRT1 = read.table(logP1,header = F)
loglik_ratio1 <- read.table(paste(prefix1,"_elem_lik.txt",sep=""),header = T)
#trueRate <- read.delim(paste0("simulation_diff_rates2/simu_500_200_diffr_2-",k,".bed"), header=F)
ratio1 <- loglik_ratio1[,4] - loglik_ratio1[,3]
ratio11 <- loglik_ratio1[,5] - loglik_ratio1[,4]
##ratio1[ratio11 >5] <- -10
##ind = sample(500,100)
elements <- rbind(elements, cbind("logBF1"=ratio1, "logBF2" = -ratio11, "LR"=logLRT1$V8, "scen" =rep(k, 500)))#,"rate" = trueRate[,6:7]))
}
elements$pattern = "conserved"
elements$pattern[elements$scen >= 1 & elements$scen <= 6] = "positive"
elements$pattern[elements$scen >= 7] = "negative"
plots <- list()
dat <- melt(elements[,c(1:3,5)])
colnames(dat)[2] <- "score"
dat$score <- factor(dat$score,levels = c('LR','logBF1',"logBF2"),ordered = TRUE)
plots[[1]] <- ggplot(dat, aes(x= pattern, y = value)) + geom_boxplot(aes(color =score), size=1.5) +xlab("") + ylim(c(-150,200)) + ylab("score")+theme_bw(base_size=16) + theme(axis.text=element_text(size=18), axis.title=element_text(size=18),legend.text=element_text(size=16), legend.title=element_text(size=18))
plot(plots[[1]])
pdf("simulation_diff_rates2-0710/BF_LRT_boxplot2-npc.pdf")
plot(plots[[1]])
#grid.arrange(grobs = plots, ncol=2)
dev.off()
setwd("~/GitHub/PhyloAcc")
#treeData <- prepare_data()
treeData <- prepare_data(tree_path = "/Users/hzr/GitHub/PhyloAcc/Data/ratite/neut_ver3_final.named.mod", species_name = "/Users/hzr/GitHub/PhyloAcc/Data/ratite/species_names.txt", common_name = "/Users/hzr/GitHub/PhyloAcc/Data/ratite/birdname2.txt")
mytree= treeData$tree
target_species = c("strCam","rhePen","rheAme","casCas","droNov","aptRow","aptHaa","aptOwe","anoDid")
tip.color = rep(1, length(mytree$tip.label))
names(tip.color) <- mytree$tip.label
tip.color[target_species] <- 4
mytree$tip.label <- treeData$tip
#mytree <- extract.clade(mytree, "aptHaa-strCam")
birds <- mytree$tip.label[c(1:20, 22:23, 37:42)]
mytree <- drop.tip(mytree, birds)
tip.color <- tip.color[-c(1:20, 22:23, 37:42)]
edge_col <- rep("springgreen3", length(mytree$edge.length))
edge_col2 <- edge_col
source("R/drawAlign_function.R")
#treeData <- prepare_data()
treeData <- prepare_data(tree_path = "/Users/hzr/GitHub/PhyloAcc/Data/ratite/neut_ver3_final.named.mod", species_name = "/Users/hzr/GitHub/PhyloAcc/Data/ratite/species_names.txt", common_name = "/Users/hzr/GitHub/PhyloAcc/Data/ratite/birdname2.txt")
mytree= treeData$tree
target_species = c("strCam","rhePen","rheAme","casCas","droNov","aptRow","aptHaa","aptOwe","anoDid")
tip.color = rep(1, length(mytree$tip.label))
names(tip.color) <- mytree$tip.label
tip.color[target_species] <- 4
mytree$tip.label <- treeData$tip
#mytree <- extract.clade(mytree, "aptHaa-strCam")
birds <- mytree$tip.label[c(1:20, 22:23, 37:42)]
mytree <- drop.tip(mytree, birds)
tip.color <- tip.color[-c(1:20, 22:23, 37:42)]
edge_col <- rep("springgreen3", length(mytree$edge.length))
edge_col2 <- edge_col
mytree$tip.label <- treeData$tip
#mytree <- extract.clade(mytree, "aptHaa-strCam")
birds <- mytree$tip.label[c(1,4:14,16:22, 37:42)]
mytree <- drop.tip(mytree, birds)
tip.color <- tip.color[-c(1,4:14,16:22, 37:42)]
edge_col <- rep("springgreen3", length(mytree$edge.length))
edge_col2 <- edge_col
# case 9
mytree= treeData$tree
tip.color = rep(1, length(mytree$tip.label))
names(tip.color) <- mytree$tip.label
tip.color[target_species] <- 4
mytree$tip.label <- treeData$tip
#mytree <- extract.clade(mytree, "aptHaa-strCam")
birds <- mytree$tip.label[c(1,4:14,16:22, 37:42)]
mytree <- drop.tip(mytree, birds)
tip.color <- tip.color[-c(1,4:14,16:22, 37:42)]
edge_col <- rep("springgreen3", length(mytree$edge.length))
edge_col2 <- edge_col
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
mytree= treeData$tree
tip.color = rep(1, length(mytree$tip.label))
names(tip.color) <- mytree$tip.label
tip.color[target_species] <- 4
mytree$tip.label <- treeData$tip
#mytree <- extract.clade(mytree, "aptHaa-strCam")
birds <- mytree$tip.label[c(1,4:14,16:20,22, 37:42)]
mytree <- drop.tip(mytree, birds)
tip.color <- tip.color[-c(1,4:14,16:22, 37:42)]
edge_col <- rep("springgreen3", length(mytree$edge.length))
edge_col2 <- edge_col
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
mytree= treeData$tree
tip.color = rep(1, length(mytree$tip.label))
names(tip.color) <- mytree$tip.label
tip.color[target_species] <- 4
mytree$tip.label <- treeData$tip
#mytree <- extract.clade(mytree, "aptHaa-strCam")
birds <- mytree$tip.label[c(16:22,24:33,35:42)]
mytree <- drop.tip(mytree, birds)
tip.color <- tip.color[-c(16:22,24:33,35:42)]
edge_col <- rep("springgreen3", length(mytree$edge.length))
edge_col2 <- edge_col
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
edge_col2[which(mytree$edge[,2] %in% c(2, 3, 15, 23,24))]<- "firebrick1"
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
mytree$tip.label
edge_col2[which(mytree$edge[,2] %in% c(2, 3, 15:17))]<- "firebrick1"
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
edge_col2 <- edge_col
edge_col2[which(mytree$edge[,2] %in% c(2, 3, 15:17))]<- "firebrick1"
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
mytree= treeData$tree
tip.color = rep(1, length(mytree$tip.label))
names(tip.color) <- mytree$tip.label
tip.color[target_species] <- 4
mytree$tip.label <- treeData$tip
#mytree <- extract.clade(mytree, "aptHaa-strCam")
birds <- mytree$tip.label[c(6:13,17:21, 25:33,35:42)]
mytree <- drop.tip(mytree, birds)
tip.color <- tip.color[-c(6:13,17:21, 25:33,35:42)]
edge_col <- rep("springgreen3", length(mytree$edge.length))
edge_col2 <- edge_col
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
mytree= treeData$tree
tip.color = rep(1, length(mytree$tip.label))
names(tip.color) <- mytree$tip.label
tip.color[target_species] <- 4
mytree$tip.label <- treeData$tip
#mytree <- extract.clade(mytree, "aptHaa-strCam")
birds <- mytree$tip.label[c(6:13,17:20, 24:33,35:42)]
mytree <- drop.tip(mytree, birds)
tip.color <- tip.color[-c(6:13,17:20, 24:33,35:42)]
edge_col <- rep("springgreen3", length(mytree$edge.length))
edge_col2 <- edge_col
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
mytree= treeData$tree
tip.color = rep(1, length(mytree$tip.label))
names(tip.color) <- mytree$tip.label
tip.color[target_species] <- 4
mytree$tip.label <- treeData$tip
#mytree <- extract.clade(mytree, "aptHaa-strCam")
birds <- mytree$tip.label[c(6:13,18:20, 24:33,35:42)]
mytree <- drop.tip(mytree, birds)
tip.color <- tip.color[-c(6:13,18:20, 24:33,35:42)]
edge_col <- rep("springgreen3", length(mytree$edge.length))
edge_col2 <- edge_col
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
edge_col2[which(mytree$edge[,2] %in% c(2, 3,7, 12, 13))]<- "firebrick1"
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
pdf("~/PhD_2/Bird/manuscript/Ratite_V2/Simulation_cases9.pdf")
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
dev.off()
mytree= treeData$tree
tip.color = rep(1, length(mytree$tip.label))
names(tip.color) <- mytree$tip.label
tip.color[target_species] <- 4
mytree$tip.label <- treeData$tip
#mytree <- extract.clade(mytree, "aptHaa-strCam")
birds <- mytree$tip.label[c(6:13,18:19, 24:33,35:42)]
mytree <- drop.tip(mytree, birds)
tip.color <- tip.color[-c(6:13,18:19, 24:33,35:42)]
edge_col <- rep("springgreen3", length(mytree$edge.length))
edge_col2 <- edge_col
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
edge_col2[which(mytree$edge[,2] %in% c(2, 3,7, 12, 14))]<- "firebrick1"
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
edge_col2 <- edge_col
edge_col2[which(mytree$edge[,2] %in% c(2, 3,7, 13, 14))]<- "firebrick1"
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
pdf("~/PhD_2/Bird/manuscript/Ratite_V2/Simulation_cases9.pdf")
edge_col2[which(mytree$edge[,2] %in% c(2, 3,7, 13, 14))]<- "firebrick1"
plot(mytree,edge.color = edge_col2,tip.color = tip.color,edge.width  =3,label.offset = 0.003,no.margin =F, cex=2, bg=NA)
dev.off()
